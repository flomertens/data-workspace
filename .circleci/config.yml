version: 2

jobs:
  docker-test-integration:
    docker:
      - image: circleci/python:3.7
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build docker images
          command: |
            touch .envs/dev.env
            make docker-build
      - run:
          name: Run integration tests
          command: make docker-test-integration
  docker-test-unit:
    docker:
      - image: circleci/python:3.7
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build docker images
          command: |
            touch .envs/dev.env
            make docker-build
      - run:
          name: Run unit tests
          command: make docker-test-unit
  docker-test-caching:
    docker:
      - image: circleci/python:3.7
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build docker images
          command: |
            touch .envs/dev.env
            echo -e "\n\n\n\n\nPull latest master image"
            docker pull quay.io/uktrade/data-workspace:master
            echo -e "\n\n\n\n\nBuild new image - hopefully with cache?"
            docker build --cache-from=alpine:3.10,quay.io/uktrade/data-workspace:master .
            echo -e "\n\n\n\n\nBuild via docker-compose"
            make docker-build
            echo -e "\n\n\n\n\nlocal filesystem"
            ls -lisan
            sha256sum requirements.txt
            echo -e "\n\n\n\n\nquay image"
            docker run -it quay.io/uktrade/data-workspace:master ls -lisan
            docker run -it quay.io/uktrade/data-workspace:master sha256sum requirements.txt
            echo -e "\n\n\n\n\nlocal image"
            docker run -it data-workspace-test ls -lisan
            docker run -it data-workspace-test sha256sum requirements.txt
            echo -e "\n\n\n\n\nquay history"
            docker history --no-trunc quay.io/uktrade/data-workspace:master
            echo -e "\n\n\n\n\nlocal history"
            docker history --no-trunc data-workspace-test
  docker-test-hack-caching:
    docker:
      - image: circleci/python:3.7
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}-{{ checksum "Dockerfile" }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt"}}
            - v1-{{ .Branch }}
            - v1
      - run:
          name: Load docker images
          command: |
            set +o pipefail
            if [ -f caches/images.tar ]; then docker load < caches/images.tar; docker images; fi
      - run:
          name: Build docker images
          command: |
            set -x
            mkdir -p caches
            make docker-build | tee docker-build.log
            echo -e "caches/images.tar\n" > layers.txt
            cat docker-build.log | grep '\-\-\->' | grep -v 'Using cache' | grep -v 'Running in' | sed -e "s/[ >-]//g" | sort | uniq >> layers.txt
            cat layers.txt
            echo $(cat layers.txt)
            docker save -o $(cat layers.txt)
      - save_cache:
          key: v1-{{ .Branch }}-{{ checksum "Dockerfile" }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}-{{ .BuildNum }}
          paths:
            - caches/
  check-linting:
    docker:
      - image: circleci/python:3.7
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install requirements
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements-dev.txt
      - run:
          name: Run static checks
          command: |
            . venv/bin/activate
            make check

workflows:
  version: 2
  build:
    jobs:
      - docker-test-hack-caching
